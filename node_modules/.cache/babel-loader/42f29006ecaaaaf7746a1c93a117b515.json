{"ast":null,"code":"import _defineProperty from \"/home/daria/MIPT-react-homeworks/MIPT-react-homeworks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { addProject } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_NEW_PROJECT = 'SET-NEW-PROJECT';\nlet initialState = {\n  projects: [],\n  id: 1\n};\n\nconst projectsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NEW_PROJECT:\n      let newProject = {\n        id: state.id++,\n        name: action.name\n      };\n      return _objectSpread({}, state, {\n        projects: [...state.posts, newProject]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default projectsReducer;\nexport const setNewProject = name => ({\n  type: SET_NEW_PROJECT,\n  name\n});\nexport const addNewTask = (name, description, priority) => dispatch => {\n  priority = parseInt(priority, 10);\n  addTask(name, description, 1, priority).then(response => {\n    if (response === null) {\n      dispatch(setNewTask(name, description, priority));\n    } else {\n      alert(\"error\");\n    }\n  });\n};","map":{"version":3,"sources":["/home/daria/MIPT-react-homeworks/MIPT-react-homeworks/src/redux/projects-reducer.js"],"names":["addProject","stopSubmit","SET_NEW_PROJECT","initialState","projects","id","projectsReducer","state","action","type","newProject","name","posts","setNewProject","addNewTask","description","priority","dispatch","parseInt","addTask","then","response","setNewTask","alert"],"mappings":";;;;;;AAAA,SAAQA,UAAR,QAAyB,YAAzB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,EADK;AAEfC,EAAAA,EAAE,EAAE;AAFW,CAAnB;;AAKA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,eAAL;AACI,UAAIQ,UAAU,GAAG;AACbL,QAAAA,EAAE,EAAEE,KAAK,CAACF,EAAN,EADS;AAEbM,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAFA,OAAjB;AAIA,+BACOJ,KADP;AAEIH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACK,KAAV,EAAiBF,UAAjB;AAFd;;AAIJ;AACI,aAAOH,KAAP;AAXR;AAaH,CAdD;;AAgBA,eAAeD,eAAf;AAEA,OAAO,MAAMO,aAAa,GAAIF,IAAD,KAAW;AAACF,EAAAA,IAAI,EAAEP,eAAP;AAAwBS,EAAAA;AAAxB,CAAX,CAAtB;AAEP,OAAO,MAAMG,UAAU,GAAG,CAACH,IAAD,EAAOI,WAAP,EAAoBC,QAApB,KAAkCC,QAAD,IAAc;AACrED,EAAAA,QAAQ,GAAGE,QAAQ,CAACF,QAAD,EAAW,EAAX,CAAnB;AACAG,EAAAA,OAAO,CAACR,IAAD,EAAOI,WAAP,EAAoB,CAApB,EAAuBC,QAAvB,CAAP,CACKI,IADL,CACWC,QAAQ,IAAI;AACf,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnBJ,MAAAA,QAAQ,CAACK,UAAU,CAACX,IAAD,EAAOI,WAAP,EAAoBC,QAApB,CAAX,CAAR;AACH,KAFD,MAGK;AACDO,MAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ,GARL;AASH,CAXM","sourcesContent":["import {addProject} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_NEW_PROJECT = 'SET-NEW-PROJECT';\n\nlet initialState = {\n    projects: [],\n    id: 1\n};\n\nconst projectsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_NEW_PROJECT:\n            let newProject = {\n                id: state.id++,\n                name: action.name,\n            };\n            return {\n                ...state,\n                projects: [...state.posts, newProject],\n            };\n        default:\n            return state;\n    }\n};\n\nexport default projectsReducer;\n\nexport const setNewProject = (name) => ({type: SET_NEW_PROJECT, name});\n\nexport const addNewTask = (name, description, priority) => (dispatch) => {\n    priority = parseInt(priority, 10);\n    addTask(name, description, 1, priority)\n        .then((response => {\n            if (response === null) {\n                dispatch(setNewTask(name, description, priority));\n            }\n            else {\n                alert(\"error\");\n            }\n        }))\n};"]},"metadata":{},"sourceType":"module"}